                                      python对象类型
                                      
--在python中，数据是以对象的形式出现的。python程序可以分解成模块，语句，表达式以及对象。

  程序由模块构成、
  
  模块包含语句。
  
  语句包含表达式。
  
  表达式建立并处理对象。
  
  --核心对象类型：
  
      数字          124，3.1415,3+4j,Decimal,Fraction
      
      字符串        'spam',"guidi's",b'a\xolc'
      
      列表         [1,[2,'three'],4]
      
      字典         {'food':'spam','taste':'yum'}
      
      元组        (1,'spam',4,'U')
      
      文件         myfile=open('eggs','r')
      
      集合         set('abc'),{'a','b','c'}
      
      其它类型     None,布尔型
      
      编程单元类型     函数，模块，类，
      
      实现相关类型     编译的代码跟踪
      
数字类型



--一般包括整数，浮点数，以及更为少见的类型。（有虚部的复数，固定精度的十进制数，带分子和分母的有理分数以及集合等。）

--数字支持一般的数学运算。

>>> 123+222
345

>>> 1.5*4
6.0

>>> 2**100
1267650600228229401496703205376

>>> len(str(2**100))    #打印二的一百次方的位数
31

浮点数的话，有可能有些奇怪。

>>> 3.1415*2
6.2830000000000004

这个是显示的问题，这证明有两种打印方法。全精度以及友好的方式。第一种形式可以看作是对象的代码形式rerp，第二种是用户友好形式str如果有些东西奇怪，

请试着打印语句显示它。

>>> print(3.1415*2)
6.283

--除了表达式外，和python一起分发的还有一些常用的模块，模块只不过是导入以供使用的一些工具。

>>> import math
>>> math.pi
3.141592653589793

math模块包括更高级的数学工具，如函数，而random模块可以作为随机数字的生成器和随机选择器。

>>> import random
>>> random.random()
0.21211711314533177
>>> random.choice([1,2,3,4])
1

python还包括了一些较为少见的数字对象，如复数，固定精度十进制数，有理数，集合，布尔值。

字符串



--字符串是用来记录文本信息的。它们在python中作为序列。序列中的元素包含了一个从左到右的顺序---序列中的元素根据它们的相对位置进行存储。严格的说，字符串是

单个字符的字符串的序列。其他类型的序列还包括列表和元组

序列的操作



作为序列，字符串支持假设其中各个元素包含位置顺序的操作，如有一个四个字符的字符串，我们通过内置的len函数验证其长度并通过索引操作得到其各个元素。


>>> S='spam'
>>> len(S)         #返回其字符串个数
4
>>> S[0]           
's'
>>> S[1]
'p'

python中，索引是按照从最前面的偏移量进行编码的。从0开始，第一项索引为0，第二项索引为1，以此类推。

--python变量不需要提前声明。当一个变量赋值的时候就创建了。可能赋的是任何类型的对象。当变量出现在一个表达式中的时候，就会用其值替换它。在使用变量前必须先

对其赋值。我们需要把一个对象赋给一个变量以保存它以供随后使用

--python中，我们能够反向索引。

>>> S[-1]
'm'
>>> S[-2]
'a'

一般来说，负的索引号可能会简单地与字符串的长度相加，因此，以下两个操作是等价的。

>>> S[-1]
'm'
>>> S[len(S)-1]
'm'

我们能够在方括号中使用任意表达式。而不仅仅是数字常量---只要python需要一个值，我们就可以使用一个常量，一个变量或者任意表达式。python语法在这方面通用的。

除了简单的从位置进行索引，序列也支持分片操作。

>>> S
'spam'
>>> S[1:3]    #在字符串S中从偏移量1到2（也就是3-1），的所有字符串，效果就是切片或‘分离出’中间的两个字符
'pa'

可以把它们看作从一个字符串中一步就提取出一部分的方法，一般形式为[i:j]，表示取出在x中从偏移量为i，直到但不包含偏移量为j的内容。结果就是返回一个新的对象。

--在切片中，左边界默认为0，并且右边界默认为切片序列的长度，这引入了一些变体。

>>> S[1:]
'pam'
>>> S
'spam'
>>> S[0:3]
'spa'
>>> S[:3]
'spa'
>>> S[:-1]
'spa'
>>> S[:]         #拷贝整个字符串
'spam'

--字符串也支持加号进行合并

>>> S
'spam'
>>> S+'xyz'  #对于字符串，+号意义为合并
'spamxyz'
>>> S
'spam'
>>> S*8      #对于字符串，*号表示重复
'spamspamspamspamspamspamspamspam'

--加号对不同的对有不同的意义。对于数字为加法，对于字符串为合并。一个操作的意义取决与操作的对象。


不可变性











































